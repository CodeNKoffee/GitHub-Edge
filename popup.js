// VARIABLES
const searchInput = document.getElementById("search__input");
const loadingPage = document.getElementById("loading__page");
const row = document.getElementById("row");


// EVENT LISTENERS & FUNCTIONS
loadingPage.style.display = "none";

document.addEventListener("keydown", (event) => {
  // IF user prompts an input, add loader
  if(event.key === "Enter" && searchInput.value !== "") {
    searchInput.style.display = "none";
    document.body.style.backgroundImage = "none";
    loadingPage.style.display = "block";

    // API Processing...
    let username = searchInput.value;

    function searchUsers(username) {
      const githubApiUrl = `https://api.github.com/users/${username}`;

      //FETCH API in-use to extract data
      fetch(githubApiUrl)
        .then((response) => response.json())
        .then((data) => {
          console.log(data);
          
          let html = "";
          if(data) {
            // IF user input is not found, a message is generated into the DOM
            if(data.html_url == undefined) {
              let message = `<span class="not__found">Sorry, user has not been found</span>`;
              
              setTimeout(function() {
                row.innerHTML = message;
              }, 4000)
            
            // IF user input is found, proceeds...
            } else {
              // CONDITIONALS to check if any data value is equal to null - auto generating an alternate
              if(data.twitter_username == null)
              data.twitter_username = "";
              
              if(data.name == null)
                data.name = data.login

              if(data.location == null)
                data.location = "Anywhere";
              
              if(data.bio == null)
                data.bio = "AUTOGENERATED: Sorry, I chose not to have a bio";
              
              // CREATING HTML tags for results
              html += `
                <button id="return__btn" class="return__btn">Back</button>
                <div id="card" class="card">
                  <div class="card__content">
                    <div class="card__content--left">
                      <figure class="card__avatar--wrapper">
                        <img src="${data.avatar_url}" alt="${data.login}'s Avatar" class="card__avatar">
                      </figure>
                      <a href="${data.blog}" target="_blank" class="card__blog">${data.blog}</a>
                      <div class="card__social--btns">
                        <a href="${data.html_url}" target="_blank" class="card__social--btn">
                          <figure class="social__btn--icon__wrapper">
                            <img src="./assets/white-github_icon.svg" alt="GitHub Icon" class="social__btn--icon">
                          </figure>
                          <span class="social__btn--title">GitHub</span>
                        </a>
                        <a href="https://www.twitter.com/${data.twitter_username}" target="_blank" id="twitter__btn" class="card__social--btn card__social--btn--twitter">
                          <figure class="social__btn--icon__wrapper">
                            <img src="./assets/white-twitter_icon.svg" alt="Twitter Icon" class="social__btn--icon">
                          </figure>
                          <span class="social__btn--title">Twitter</span>
                        </a>
                      </div>
                    </div>  
                    <div class="card__content--right">
                      <span class="card__name">${data.name}</span>
                      <span class="card__username">@${data.login}</span>
                      <span class="card__location">üìç ${data.location}</span>
                      <p class="card__bio">
                        ${data.bio}
                      </p>
                    </div>
                  </div>
                </div>
              `;
            }
          }

        // SETTING the results in the DOM
        setTimeout(function() {
          row.innerHTML = html
        }, 3000)
      });
    }

    searchUsers(username);


    // RETURN button onclick
    row.addEventListener('click', event => {
      if(event.target.matches(".return__btn")) {
        event.preventDefault();
        document.getElementById("card").style.display = "none"
        document.getElementById("return__btn").style.display = "none"
        document.body.style.backgroundImage = "url(./assets/background.png)";
      }
    })

  //IF user does not prompt an input
  } else if(event.key == "Enter" && searchInput.value == "") {
      window.open("https://www.github.com");
    }
})
